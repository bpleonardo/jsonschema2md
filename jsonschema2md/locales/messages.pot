# Translations template for jsonschema2md.
# Copyright (C) 2025 ORGANIZATION
# This file is distributed under the same license as the jsonschema2md
# project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: jsonschema2md VERSION\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2025-06-05 19:43-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: jsonschema2md/__init__.py:84 jsonschema2md/__init__.py:579
msgid "Items"
msgstr ""

#: jsonschema2md/__init__.py:85
msgid "Contains"
msgstr ""

#: jsonschema2md/__init__.py:86 jsonschema2md/__init__.py:632
msgid "Definitions"
msgstr ""

#: jsonschema2md/__init__.py:87
msgid "$defs"
msgstr ""

#: jsonschema2md/__init__.py:91
msgid "array"
msgstr ""

#: jsonschema2md/__init__.py:92
msgid "boolean"
msgstr ""

#: jsonschema2md/__init__.py:93
msgid "null"
msgstr ""

#: jsonschema2md/__init__.py:94
msgid "integer"
msgstr ""

#: jsonschema2md/__init__.py:95
msgid "number"
msgstr ""

#: jsonschema2md/__init__.py:96
msgid "object"
msgstr ""

#: jsonschema2md/__init__.py:97
msgid "string"
msgstr ""

#: jsonschema2md/__init__.py:175
#, python-format
msgid "Must be of type *%(type)s*."
msgstr ""

#: jsonschema2md/__init__.py:178
#, python-format
msgid "Content encoding: `%(encoding)s`."
msgstr ""

#: jsonschema2md/__init__.py:181
#, python-format
msgid "Content media type: `%(type)s`."
msgstr ""

#: jsonschema2md/__init__.py:183
#, python-format
msgid "Minimum: `%(min)d`."
msgstr ""

#: jsonschema2md/__init__.py:185
#, python-format
msgid "Exclusive minimum: `%(exmin)d`."
msgstr ""

#: jsonschema2md/__init__.py:187
#, python-format
msgid "Maximum: `%(max)d`."
msgstr ""

#: jsonschema2md/__init__.py:189
#, python-format
msgid "Exclusive maximum: `%(exmax)d`."
msgstr ""

#: jsonschema2md/__init__.py:192 jsonschema2md/__init__.py:213
#, python-format
msgid "Length must be at least %(min)d."
msgstr ""

#: jsonschema2md/__init__.py:194 jsonschema2md/__init__.py:215
#, python-format
msgid "Length must be at most %(max)d."
msgstr ""

#: jsonschema2md/__init__.py:196 jsonschema2md/__init__.py:217
#, python-format
msgid "Length must be equal to %(length)d."
msgstr ""

#: jsonschema2md/__init__.py:198 jsonschema2md/__init__.py:219
#, python-format
msgid "Length must be between %(min)d and %(max)d (inclusive)."
msgstr ""

#: jsonschema2md/__init__.py:205
msgid "Must be an integer."
msgstr ""

#: jsonschema2md/__init__.py:208
#, python-format
msgid "Must be a multiple of `%(multiple)d`."
msgstr ""

#: jsonschema2md/__init__.py:227
#, python-format
msgid "Must match pattern: `%(pattern)s` ([Test](%(link)s))."
msgstr ""

#: jsonschema2md/__init__.py:234
msgid "Items must be unique."
msgstr ""

#: jsonschema2md/__init__.py:237
#, python-format
msgid "Contains schema must be matched at least %(min)d times."
msgstr ""

#: jsonschema2md/__init__.py:241
#, python-format
msgid "Contains schema must be matched at most %(max)d times."
msgstr ""

#: jsonschema2md/__init__.py:245
#, python-format
msgid "Contains schema must be matched exactly %(count)d times."
msgstr ""

#: jsonschema2md/__init__.py:250
#, python-format
msgid ""
"Contains schema must be matched between %(min)d and %(max)d times "
"(inclusive)."
msgstr ""

#: jsonschema2md/__init__.py:258
#, python-format
msgid "Number of properties must be at least %(min)d."
msgstr ""

#: jsonschema2md/__init__.py:262
#, python-format
msgid "Number of properties must be at most %(max)d."
msgstr ""

#: jsonschema2md/__init__.py:266
#, python-format
msgid "Number of properties must be equal to %(count)d."
msgstr ""

#: jsonschema2md/__init__.py:271
#, python-format
msgid "Number of properties must be between %(min)d and %(max)d (inclusive)."
msgstr ""

#: jsonschema2md/__init__.py:279
#, python-format
msgid "Must be one of: %(enum)s."
msgstr ""

#: jsonschema2md/__init__.py:283
#, python-format
msgid "Must be: `%(const)s`."
msgstr ""

#: jsonschema2md/__init__.py:286
msgid "Can contain additional properties."
msgstr ""

#: jsonschema2md/__init__.py:288
msgid "Cannot contain additional properties."
msgstr ""

#: jsonschema2md/__init__.py:292
msgid "Can contain unevaluated properties."
msgstr ""

#: jsonschema2md/__init__.py:294
msgid "Cannot contain unevaluated properties."
msgstr ""

#: jsonschema2md/__init__.py:298
#, python-format
msgid "Refer to *[%(ref)s](#%(ref_link)s)*."
msgstr ""

#: jsonschema2md/__init__.py:302
#, python-format
msgid "Default: `%(default)s`."
msgstr ""

#: jsonschema2md/__init__.py:331
msgid "Examples:"
msgstr ""

#. TL: I'm looking to always have a comma between (type or format) and
#. attributes,
#. so I'm adding them manually.
#: jsonschema2md/__init__.py:401
#, python-format
msgid ", format: %(format)s"
msgstr ""

#: jsonschema2md/__init__.py:406
msgid "required"
msgstr ""

#: jsonschema2md/__init__.py:410
#, python-format
msgid "required <sub><sup>if %(dependent)s is set</sup></sub>"
msgstr ""

#: jsonschema2md/__init__.py:416
msgid "deprecated"
msgstr ""

#: jsonschema2md/__init__.py:417
msgid "read-only"
msgstr ""

#: jsonschema2md/__init__.py:418
msgid "write-only"
msgstr ""

#: jsonschema2md/__init__.py:423
#, python-format
msgid ", %(attributes)s"
msgstr ""

#: jsonschema2md/__init__.py:469
msgid "All of"
msgstr ""

#: jsonschema2md/__init__.py:470
msgid "Any of"
msgstr ""

#: jsonschema2md/__init__.py:471
msgid "One of"
msgstr ""

#: jsonschema2md/__init__.py:512
msgid "Additional properties"
msgstr ""

#: jsonschema2md/__init__.py:514
msgid "Unevaluated properties"
msgstr ""

#: jsonschema2md/__init__.py:573
msgid "JSON Schema"
msgstr ""

#: jsonschema2md/__init__.py:593
msgid "Additional Properties"
msgstr ""

#: jsonschema2md/__init__.py:593
msgid "Unevaluated Properties"
msgstr ""

#: jsonschema2md/__init__.py:608
msgid "Pattern Properties"
msgstr ""

#: jsonschema2md/__init__.py:614
msgid "Properties"
msgstr ""

#: jsonschema2md/__init__.py:644
msgid "Examples"
msgstr ""
